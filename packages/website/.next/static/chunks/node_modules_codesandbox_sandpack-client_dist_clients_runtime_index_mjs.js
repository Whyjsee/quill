"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_codesandbox_sandpack-client_dist_clients_runtime_index_mjs"],{

/***/ "../../node_modules/@codesandbox/sandpack-client/dist/base-80a1f760.mjs":
/*!******************************************************************************!*\
  !*** ../../node_modules/@codesandbox/sandpack-client/dist/base-80a1f760.mjs ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: function() { return /* binding */ SandpackClient; }\n/* harmony export */ });\n/* harmony import */ var dequal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dequal */ \"../../node_modules/dequal/dist/index.mjs\");\n\n\nvar SandpackClient = /** @class */ (function () {\n    function SandpackClient(iframeSelector, sandboxSetup, options) {\n        if (options === void 0) { options = {}; }\n        this.status = \"idle\";\n        this.options = options;\n        this.sandboxSetup = sandboxSetup;\n        this.iframeSelector = iframeSelector;\n    }\n    /**\n     * Clients handles\n     */\n    SandpackClient.prototype.updateOptions = function (options) {\n        if (!(0,dequal__WEBPACK_IMPORTED_MODULE_0__.dequal)(this.options, options)) {\n            this.options = options;\n            this.updateSandbox();\n        }\n    };\n    SandpackClient.prototype.updateSandbox = function (_sandboxSetup, _isInitializationCompile) {\n        if (_sandboxSetup === void 0) { _sandboxSetup = this.sandboxSetup; }\n        throw Error(\"Method not implemented\");\n    };\n    SandpackClient.prototype.destroy = function () {\n        throw Error(\"Method not implemented\");\n    };\n    /**\n     * Bundler communication\n     */\n    SandpackClient.prototype.dispatch = function (_message) {\n        throw Error(\"Method not implemented\");\n    };\n    SandpackClient.prototype.listen = function (_listener) {\n        throw Error(\"Method not implemented\");\n    };\n    return SandpackClient;\n}());\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0Bjb2Rlc2FuZGJveC9zYW5kcGFjay1jbGllbnQvZGlzdC9iYXNlLTgwYTFmNzYwLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQzs7QUFFaEM7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDhDQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY29kZXNhbmRib3gvc2FuZHBhY2stY2xpZW50L2Rpc3QvYmFzZS04MGExZjc2MC5tanM/NGQ5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXF1YWwgfSBmcm9tICdkZXF1YWwnO1xuXG52YXIgU2FuZHBhY2tDbGllbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2FuZHBhY2tDbGllbnQoaWZyYW1lU2VsZWN0b3IsIHNhbmRib3hTZXR1cCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLnN0YXR1cyA9IFwiaWRsZVwiO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLnNhbmRib3hTZXR1cCA9IHNhbmRib3hTZXR1cDtcbiAgICAgICAgdGhpcy5pZnJhbWVTZWxlY3RvciA9IGlmcmFtZVNlbGVjdG9yO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbGllbnRzIGhhbmRsZXNcbiAgICAgKi9cbiAgICBTYW5kcGFja0NsaWVudC5wcm90b3R5cGUudXBkYXRlT3B0aW9ucyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIGlmICghZGVxdWFsKHRoaXMub3B0aW9ucywgb3B0aW9ucykpIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVNhbmRib3goKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgU2FuZHBhY2tDbGllbnQucHJvdG90eXBlLnVwZGF0ZVNhbmRib3ggPSBmdW5jdGlvbiAoX3NhbmRib3hTZXR1cCwgX2lzSW5pdGlhbGl6YXRpb25Db21waWxlKSB7XG4gICAgICAgIGlmIChfc2FuZGJveFNldHVwID09PSB2b2lkIDApIHsgX3NhbmRib3hTZXR1cCA9IHRoaXMuc2FuZGJveFNldHVwOyB9XG4gICAgICAgIHRocm93IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9O1xuICAgIFNhbmRwYWNrQ2xpZW50LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBCdW5kbGVyIGNvbW11bmljYXRpb25cbiAgICAgKi9cbiAgICBTYW5kcGFja0NsaWVudC5wcm90b3R5cGUuZGlzcGF0Y2ggPSBmdW5jdGlvbiAoX21lc3NhZ2UpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkXCIpO1xuICAgIH07XG4gICAgU2FuZHBhY2tDbGllbnQucHJvdG90eXBlLmxpc3RlbiA9IGZ1bmN0aW9uIChfbGlzdGVuZXIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkXCIpO1xuICAgIH07XG4gICAgcmV0dXJuIFNhbmRwYWNrQ2xpZW50O1xufSgpKTtcblxuZXhwb3J0IHsgU2FuZHBhY2tDbGllbnQgYXMgUyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/@codesandbox/sandpack-client/dist/base-80a1f760.mjs\n"));

/***/ }),

/***/ "../../node_modules/@codesandbox/sandpack-client/dist/clients/runtime/index.mjs":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@codesandbox/sandpack-client/dist/clients/runtime/index.mjs ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SandpackRuntime: function() { return /* binding */ SandpackRuntime; }\n/* harmony export */ });\n/* harmony import */ var _types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types-0877c553.mjs */ \"../../node_modules/@codesandbox/sandpack-client/dist/types-0877c553.mjs\");\n/* harmony import */ var dequal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dequal */ \"../../node_modules/dequal/dist/index.mjs\");\n/* harmony import */ var _base_80a1f760_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../base-80a1f760.mjs */ \"../../node_modules/@codesandbox/sandpack-client/dist/base-80a1f760.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! outvariant */ \"../../node_modules/outvariant/lib/index.mjs\");\n\n\n\n\n\n/**\n * This file is a copy of the resolver from the `codesandbox-api` package.\n * We wanted to avoid to reference codesandbox-api because of the code that runs on load in the package.\n * The plan is to take some time and refactor codesandbox-api into what it was supposed to be in the first place,\n * an abstraction over the actions that can be dispatched between the bundler and the iframe.\n */\nvar Protocol = /** @class */ (function () {\n    function Protocol(type, handleMessage, protocol) {\n        var _this = this;\n        this.type = type;\n        this.handleMessage = handleMessage;\n        this.protocol = protocol;\n        this._disposeMessageListener = this.protocol.channelListen(function (msg) { return (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__._)(_this, void 0, void 0, function () {\n            var message, result, response, err_1, response;\n            return (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.a)(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(msg.type === this.getTypeId() && msg.method)) return [3 /*break*/, 4];\n                        message = msg;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.handleMessage(message)];\n                    case 2:\n                        result = _a.sent();\n                        response = {\n                            type: this.getTypeId(),\n                            msgId: message.msgId,\n                            result: result,\n                        };\n                        this.protocol.dispatch(response);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        response = {\n                            type: this.getTypeId(),\n                            msgId: message.msgId,\n                            error: {\n                                message: err_1.message,\n                            },\n                        };\n                        this.protocol.dispatch(response);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); });\n    }\n    Protocol.prototype.getTypeId = function () {\n        return \"protocol-\".concat(this.type);\n    };\n    Protocol.prototype.dispose = function () {\n        this._disposeMessageListener();\n    };\n    return Protocol;\n}());\n\nvar IFrameProtocol = /** @class */ (function () {\n    function IFrameProtocol(iframe, origin) {\n        // React to messages from any iframe\n        this.globalListeners = {};\n        this.globalListenersCount = 0;\n        // React to messages from the iframe owned by this instance\n        this.channelListeners = {};\n        this.channelListenersCount = 0;\n        // Random number to identify this instance of the client when messages are coming from multiple iframes\n        this.channelId = Math.floor(Math.random() * 1000000);\n        this.frameWindow = iframe.contentWindow;\n        this.origin = origin;\n        this.globalListeners = [];\n        this.channelListeners = [];\n        this.eventListener = this.eventListener.bind(this);\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"message\", this.eventListener);\n        }\n    }\n    IFrameProtocol.prototype.cleanup = function () {\n        window.removeEventListener(\"message\", this.eventListener);\n        this.globalListeners = {};\n        this.channelListeners = {};\n        this.globalListenersCount = 0;\n        this.channelListenersCount = 0;\n    };\n    // Sends the channelId and triggers an iframeHandshake promise to resolve,\n    // so the iframe can start listening for messages (based on the id)\n    IFrameProtocol.prototype.register = function () {\n        if (!this.frameWindow) {\n            return;\n        }\n        this.frameWindow.postMessage({\n            type: \"register-frame\",\n            origin: document.location.origin,\n            id: this.channelId,\n        }, this.origin);\n    };\n    // Messages are dispatched from the client directly to the instance iframe\n    IFrameProtocol.prototype.dispatch = function (message) {\n        if (!this.frameWindow) {\n            return;\n        }\n        this.frameWindow.postMessage((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)({ $id: this.channelId, codesandbox: true }, message), this.origin);\n    };\n    // Add a listener that is called on any message coming from an iframe in the page\n    // This is needed for the `initialize` message which comes without a channelId\n    IFrameProtocol.prototype.globalListen = function (listener) {\n        var _this = this;\n        if (typeof listener !== \"function\") {\n            return function () {\n                return;\n            };\n        }\n        var listenerId = this.globalListenersCount;\n        this.globalListeners[listenerId] = listener;\n        this.globalListenersCount++;\n        return function () {\n            delete _this.globalListeners[listenerId];\n        };\n    };\n    // Add a listener that is called on any message coming from an iframe with the instance channelId\n    // All other messages (eg: from other iframes) are ignored\n    IFrameProtocol.prototype.channelListen = function (listener) {\n        var _this = this;\n        if (typeof listener !== \"function\") {\n            return function () {\n                return;\n            };\n        }\n        var listenerId = this.channelListenersCount;\n        this.channelListeners[listenerId] = listener;\n        this.channelListenersCount++;\n        return function () {\n            delete _this.channelListeners[listenerId];\n        };\n    };\n    // Handles message windows coming from iframes\n    IFrameProtocol.prototype.eventListener = function (evt) {\n        // skip events originating from different iframes\n        if (evt.source !== this.frameWindow) {\n            return;\n        }\n        var message = evt.data;\n        if (!message.codesandbox) {\n            return;\n        }\n        Object.values(this.globalListeners).forEach(function (listener) {\n            return listener(message);\n        });\n        if (message.$id !== this.channelId) {\n            return;\n        }\n        Object.values(this.channelListeners).forEach(function (listener) {\n            return listener(message);\n        });\n    };\n    return IFrameProtocol;\n}());\n\nvar MAX_CLIENT_DEPENDENCY_COUNT = 50;\nfunction getTemplate(pkg, \n/* eslint-disable @typescript-eslint/no-explicit-any */\nmodules) {\n    if (!pkg) {\n        return \"static\";\n    }\n    var _a = pkg.dependencies, dependencies = _a === void 0 ? {} : _a, _b = pkg.devDependencies, devDependencies = _b === void 0 ? {} : _b;\n    var totalDependencies = (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.i)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.i)([], Object.keys(dependencies), true), Object.keys(devDependencies), true);\n    var moduleNames = Object.keys(modules);\n    var adonis = [\"@adonisjs/framework\", \"@adonisjs/core\"];\n    if (totalDependencies.some(function (dep) { return adonis.indexOf(dep) > -1; })) {\n        return \"adonis\";\n    }\n    var nuxt = [\"nuxt\", \"nuxt-edge\", \"nuxt-ts\", \"nuxt-ts-edge\", \"nuxt3\"];\n    if (totalDependencies.some(function (dep) { return nuxt.indexOf(dep) > -1; })) {\n        return \"nuxt\";\n    }\n    if (totalDependencies.indexOf(\"next\") > -1) {\n        return \"next\";\n    }\n    var apollo = [\n        \"apollo-server\",\n        \"apollo-server-express\",\n        \"apollo-server-hapi\",\n        \"apollo-server-koa\",\n        \"apollo-server-lambda\",\n        \"apollo-server-micro\",\n    ];\n    if (totalDependencies.some(function (dep) { return apollo.indexOf(dep) > -1; })) {\n        return \"apollo\";\n    }\n    if (totalDependencies.indexOf(\"mdx-deck\") > -1) {\n        return \"mdx-deck\";\n    }\n    if (totalDependencies.indexOf(\"gridsome\") > -1) {\n        return \"gridsome\";\n    }\n    if (totalDependencies.indexOf(\"vuepress\") > -1) {\n        return \"vuepress\";\n    }\n    if (totalDependencies.indexOf(\"ember-cli\") > -1) {\n        return \"ember\";\n    }\n    if (totalDependencies.indexOf(\"sapper\") > -1) {\n        return \"sapper\";\n    }\n    if (totalDependencies.indexOf(\"gatsby\") > -1) {\n        return \"gatsby\";\n    }\n    if (totalDependencies.indexOf(\"quasar\") > -1) {\n        return \"quasar\";\n    }\n    if (totalDependencies.indexOf(\"@docusaurus/core\") > -1) {\n        return \"docusaurus\";\n    }\n    if (totalDependencies.indexOf(\"remix\") > -1) {\n        return \"remix\";\n    }\n    if (totalDependencies.indexOf(\"astro\") > -1) {\n        return \"node\";\n    }\n    // CLIENT\n    if (moduleNames.some(function (m) { return m.endsWith(\".re\"); })) {\n        return \"reason\";\n    }\n    var parcel = [\"parcel-bundler\", \"parcel\"];\n    if (totalDependencies.some(function (dep) { return parcel.indexOf(dep) > -1; })) {\n        return \"parcel\";\n    }\n    var dojo = [\"@dojo/core\", \"@dojo/framework\"];\n    if (totalDependencies.some(function (dep) { return dojo.indexOf(dep) > -1; })) {\n        return \"@dojo/cli-create-app\";\n    }\n    if (totalDependencies.indexOf(\"@nestjs/core\") > -1 ||\n        totalDependencies.indexOf(\"@nestjs/common\") > -1) {\n        return \"nest\";\n    }\n    if (totalDependencies.indexOf(\"react-styleguidist\") > -1) {\n        return \"styleguidist\";\n    }\n    if (totalDependencies.indexOf(\"react-scripts\") > -1) {\n        return \"create-react-app\";\n    }\n    if (totalDependencies.indexOf(\"react-scripts-ts\") > -1) {\n        return \"create-react-app-typescript\";\n    }\n    if (totalDependencies.indexOf(\"@angular/core\") > -1) {\n        return \"angular-cli\";\n    }\n    if (totalDependencies.indexOf(\"preact-cli\") > -1) {\n        return \"preact-cli\";\n    }\n    if (totalDependencies.indexOf(\"@sveltech/routify\") > -1 ||\n        totalDependencies.indexOf(\"@roxi/routify\") > -1) {\n        return \"node\";\n    }\n    if (totalDependencies.indexOf(\"vite\") > -1) {\n        return \"node\";\n    }\n    if (totalDependencies.indexOf(\"@frontity/core\") > -1) {\n        return \"node\";\n    }\n    if (totalDependencies.indexOf(\"svelte\") > -1) {\n        return \"svelte\";\n    }\n    if (totalDependencies.indexOf(\"vue\") > -1) {\n        return \"vue-cli\";\n    }\n    if (totalDependencies.indexOf(\"cx\") > -1) {\n        return \"cxjs\";\n    }\n    var nodeDeps = [\n        \"express\",\n        \"koa\",\n        \"nodemon\",\n        \"ts-node\",\n        \"@tensorflow/tfjs-node\",\n        \"webpack-dev-server\",\n        \"snowpack\",\n    ];\n    if (totalDependencies.some(function (dep) { return nodeDeps.indexOf(dep) > -1; })) {\n        return \"node\";\n    }\n    if (Object.keys(dependencies).length >= MAX_CLIENT_DEPENDENCY_COUNT) {\n        // The dependencies are too much for client sandboxes to handle\n        return \"node\";\n    }\n    return undefined;\n}\n\nvar _a;\nvar BUNDLER_URL = \"https://\".concat((_a = \"2.13.2\") === null || _a === void 0 ? void 0 : _a.replace(/\\./g, \"-\"), \"-sandpack.codesandbox.io/\");\nvar SandpackRuntime = /** @class */ (function (_super) {\n    (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.g)(SandpackRuntime, _super);\n    function SandpackRuntime(selector, sandboxSetup, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, selector, sandboxSetup, options) || this;\n        _this.getTranspilerContext = function () {\n            return new Promise(function (resolve) {\n                var unsubscribe = _this.listen(function (message) {\n                    if (message.type === \"transpiler-context\") {\n                        resolve(message.data);\n                        unsubscribe();\n                    }\n                });\n                _this.dispatch({ type: \"get-transpiler-context\" });\n            });\n        };\n        _this.bundlerURL = options.bundlerURL || BUNDLER_URL;\n        if (options.teamId) {\n            _this.bundlerURL =\n                _this.bundlerURL.replace(\"https://\", \"https://\" + options.teamId + \"-\") +\n                    \"?cache=\".concat(Date.now());\n        }\n        _this.bundlerState = undefined;\n        _this.errors = [];\n        _this.status = \"initializing\";\n        if (typeof selector === \"string\") {\n            _this.selector = selector;\n            var element = document.querySelector(selector);\n            (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.n)(element, \"The element '\".concat(selector, \"' was not found\"));\n            _this.element = element;\n            _this.iframe = document.createElement(\"iframe\");\n            _this.initializeElement();\n        }\n        else {\n            _this.element = selector;\n            _this.iframe = selector;\n        }\n        if (!_this.iframe.getAttribute(\"sandbox\")) {\n            _this.iframe.setAttribute(\"sandbox\", \"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts allow-downloads allow-pointer-lock\");\n            _this.iframe.setAttribute(\"allow\", \"accelerometer; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; clipboard-write;\");\n        }\n        _this.setLocationURLIntoIFrame();\n        _this.iframeProtocol = new IFrameProtocol(_this.iframe, _this.bundlerURL);\n        _this.unsubscribeGlobalListener = _this.iframeProtocol.globalListen(function (mes) {\n            if (mes.type !== \"initialized\" || !_this.iframe.contentWindow) {\n                return;\n            }\n            _this.iframeProtocol.register();\n            if (_this.options.fileResolver) {\n                _this.fileResolverProtocol = new Protocol(\"fs\", function (data) { return (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__._)(_this, void 0, void 0, function () {\n                    return (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.a)(this, function (_a) {\n                        if (data.method === \"isFile\") {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            return [2 /*return*/, this.options.fileResolver.isFile(data.params[0])];\n                        }\n                        else if (data.method === \"readFile\") {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            return [2 /*return*/, this.options.fileResolver.readFile(data.params[0])];\n                        }\n                        else {\n                            throw new Error(\"Method not supported\");\n                        }\n                    });\n                }); }, _this.iframeProtocol);\n            }\n            _this.updateSandbox(_this.sandboxSetup, true);\n        });\n        _this.unsubscribeChannelListener = _this.iframeProtocol.channelListen(function (mes) {\n            switch (mes.type) {\n                case \"start\": {\n                    _this.errors = [];\n                    break;\n                }\n                case \"status\": {\n                    _this.status = mes.status;\n                    break;\n                }\n                case \"action\": {\n                    if (mes.action === \"show-error\") {\n                        _this.errors = (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.i)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.i)([], _this.errors, true), [(0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(mes)], false);\n                    }\n                    break;\n                }\n                case \"done\": {\n                    _this.status = \"done\";\n                    break;\n                }\n                case \"state\": {\n                    _this.bundlerState = mes.state;\n                    break;\n                }\n            }\n        });\n        return _this;\n    }\n    SandpackRuntime.prototype.setLocationURLIntoIFrame = function () {\n        var _a;\n        var urlSource = this.options.startRoute\n            ? new URL(this.options.startRoute, this.bundlerURL).toString()\n            : this.bundlerURL;\n        (_a = this.iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.location.replace(urlSource);\n        this.iframe.src = urlSource;\n    };\n    SandpackRuntime.prototype.destroy = function () {\n        this.unsubscribeChannelListener();\n        this.unsubscribeGlobalListener();\n        this.iframeProtocol.cleanup();\n    };\n    SandpackRuntime.prototype.updateOptions = function (options) {\n        if (!(0,dequal__WEBPACK_IMPORTED_MODULE_0__.dequal)(this.options, options)) {\n            this.options = options;\n            this.updateSandbox();\n        }\n    };\n    SandpackRuntime.prototype.updateSandbox = function (sandboxSetup, isInitializationCompile) {\n        var _a, _b, _c, _d;\n        if (sandboxSetup === void 0) { sandboxSetup = this.sandboxSetup; }\n        this.sandboxSetup = (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)({}, this.sandboxSetup), sandboxSetup);\n        var files = this.getFiles();\n        var modules = Object.keys(files).reduce(function (prev, next) {\n            var _a;\n            return ((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)({}, prev), (_a = {}, _a[next] = {\n                code: files[next].code,\n                path: next,\n            }, _a)));\n        }, {});\n        var packageJSON = JSON.parse((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.b)(this.sandboxSetup.dependencies, this.sandboxSetup.devDependencies, this.sandboxSetup.entry));\n        try {\n            packageJSON = JSON.parse(files[\"/package.json\"].code);\n        }\n        catch (e) {\n            console.error((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(\"could not parse package.json file: \" + e.message));\n        }\n        // TODO move this to a common format\n        var normalizedModules = Object.keys(files).reduce(function (prev, next) {\n            var _a;\n            return ((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)({}, prev), (_a = {}, _a[next] = {\n                content: files[next].code,\n                path: next,\n            }, _a)));\n        }, {});\n        this.dispatch((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)({}, this.options), { type: \"compile\", codesandbox: true, version: 3, isInitializationCompile: isInitializationCompile, modules: modules, reactDevTools: this.options.reactDevTools, externalResources: this.options.externalResources || [], hasFileResolver: Boolean(this.options.fileResolver), disableDependencyPreprocessing: this.sandboxSetup.disableDependencyPreprocessing, template: this.sandboxSetup.template ||\n                getTemplate(packageJSON, normalizedModules), showOpenInCodeSandbox: (_a = this.options.showOpenInCodeSandbox) !== null && _a !== void 0 ? _a : true, showErrorScreen: (_b = this.options.showErrorScreen) !== null && _b !== void 0 ? _b : true, showLoadingScreen: (_c = this.options.showLoadingScreen) !== null && _c !== void 0 ? _c : false, skipEval: this.options.skipEval || false, clearConsoleDisabled: !this.options.clearConsoleOnFirstCompile, logLevel: (_d = this.options.logLevel) !== null && _d !== void 0 ? _d : _types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.S.Info, customNpmRegistries: this.options.customNpmRegistries, teamId: this.options.teamId, sandboxId: this.options.sandboxId }));\n    };\n    SandpackRuntime.prototype.dispatch = function (message) {\n        /**\n         * Intercept \"refresh\" dispatch: this will make sure\n         * that the iframe is still in the location it's supposed to be.\n         * External links inside the iframe will change the location and\n         * prevent the user from navigating back.\n         */\n        if (message.type === \"refresh\") {\n            this.setLocationURLIntoIFrame();\n        }\n        this.iframeProtocol.dispatch(message);\n    };\n    SandpackRuntime.prototype.listen = function (listener) {\n        return this.iframeProtocol.channelListen(listener);\n    };\n    /**\n     * Get the URL of the contents of the current sandbox\n     */\n    SandpackRuntime.prototype.getCodeSandboxURL = function () {\n        var files = this.getFiles();\n        var paramFiles = Object.keys(files).reduce(function (prev, next) {\n            var _a;\n            return ((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)((0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.h)({}, prev), (_a = {}, _a[next.replace(\"/\", \"\")] = {\n                content: files[next].code,\n                isBinary: false,\n            }, _a)));\n        }, {});\n        return fetch(\"https://codesandbox.io/api/v1/sandboxes/define?json=1\", {\n            method: \"POST\",\n            body: JSON.stringify({ files: paramFiles }),\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then(function (x) { return x.json(); })\n            .then(function (res) { return ({\n            sandboxId: res.sandbox_id,\n            editorUrl: \"https://codesandbox.io/s/\".concat(res.sandbox_id),\n            embedUrl: \"https://codesandbox.io/embed/\".concat(res.sandbox_id),\n        }); });\n    };\n    SandpackRuntime.prototype.getFiles = function () {\n        var sandboxSetup = this.sandboxSetup;\n        if (sandboxSetup.files[\"/package.json\"] === undefined) {\n            return (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.d)(sandboxSetup.files, sandboxSetup.dependencies, sandboxSetup.devDependencies, sandboxSetup.entry);\n        }\n        return this.sandboxSetup.files;\n    };\n    SandpackRuntime.prototype.initializeElement = function () {\n        this.iframe.style.border = \"0\";\n        this.iframe.style.width = this.options.width || \"100%\";\n        this.iframe.style.height = this.options.height || \"100%\";\n        this.iframe.style.overflow = \"hidden\";\n        (0,_types_0877c553_mjs__WEBPACK_IMPORTED_MODULE_2__.n)(this.element.parentNode, \"The given iframe does not have a parent.\");\n        this.element.parentNode.replaceChild(this.iframe, this.element);\n    };\n    return SandpackRuntime;\n}(_base_80a1f760_mjs__WEBPACK_IMPORTED_MODULE_3__.S));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@codesandbox/sandpack-client/dist/clients/runtime/index.mjs\n"));

/***/ })

}]);